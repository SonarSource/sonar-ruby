name: Build

on:
  push:
    branches:
      - master
      - branch-*
      - dogfood-*
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: "45 0 * * *" # Run daily at 0:45 AM UTC

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: github-ubuntu-latest-s  # Public repository runner
    name: Build
    permissions:
      id-token: write  # Required for Vault OIDC authentication
      contents: write  # Required for repository access and tagging
    outputs:
      build-number: ${{ steps.build-gradle.outputs.BUILD_NUMBER }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: jdx/mise-action@5ac50f778e26fac95da98d50503682459e86d566 # v3.2.0
        with:
          version: 2025.7.12
      - uses: SonarSource/ci-github-actions/build-gradle@v1
        id: build-gradle
        with:
          deploy-pull-request: true
          artifactory-reader-role: private-reader    # Override for public repo using private access
          artifactory-deployer-role: qa-deployer     # Override for public repo using private access

  qa_plugin:
    needs: [build]
    runs-on: github-ubuntu-latest-s  # Public repository runner
    name: QA Plugin Tests
    permissions:
      id-token: write  # Required for Vault OIDC authentication
      contents: write  # Required for repository access
    strategy:
      matrix:
        sq_version: [DEV, LATEST_RELEASE]
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: jdx/mise-action@5ac50f778e26fac95da98d50503682459e86d566 # v3.2.0
        with:
          version: 2025.7.12
      - name: Get Vault secrets
        id: secrets
        uses: SonarSource/vault-action-wrapper@v3
        with:
          secrets: |
            development/github/token/licenses-ro token | GITHUB_TOKEN;
            development/artifactory/token/{REPO_OWNER_NAME_DASH}-private-reader access_token | ARTIFACTORY_ACCESS_TOKEN;
      - name: Run QA Plugin Tests
        env:
          GITHUB_TOKEN: ${{ fromJSON(steps.secrets.outputs.vault).GITHUB_TOKEN }}
          ARTIFACTORY_ACCESS_TOKEN: ${{ fromJSON(steps.secrets.outputs.vault).ARTIFACTORY_ACCESS_TOKEN }}
          SQ_VERSION: ${{ matrix.sq_version }}
          BUILD_NUMBER: ${{ needs.build.outputs.build-number }}
        run: |
          ./gradlew ":its:plugin:test" "-Pplugin" \
            "-Dsonar.runtimeVersion=${SQ_VERSION}" \
            "-Dorchestrator.artifactory.accessToken=${ARTIFACTORY_ACCESS_TOKEN}" \
            "-DbuildNumber=${BUILD_NUMBER}" \
            -Pqa --info --stacktrace --console plain --no-daemon --build-cache

  qa_ruling:
    needs: [build]
    runs-on: github-ubuntu-latest-s  # Public repository runner
    name: QA Ruling Tests
    permissions:
      id-token: write  # Required for Vault OIDC authentication
      contents: write  # Required for repository access
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          submodules: true
      - uses: jdx/mise-action@5ac50f778e26fac95da98d50503682459e86d566 # v3.2.0
        with:
          version: 2025.7.12
      - name: Get Vault secrets
        id: secrets
        uses: SonarSource/vault-action-wrapper@v3
        with:
          secrets: |
            development/github/token/licenses-ro token | GITHUB_TOKEN;
            development/artifactory/token/{REPO_OWNER_NAME_DASH}-private-reader access_token | ARTIFACTORY_ACCESS_TOKEN;
      - name: Run QA Plugin Tests
        env:
          GITHUB_TOKEN: ${{ fromJSON(steps.secrets.outputs.vault).GITHUB_TOKEN }}
          ARTIFACTORY_ACCESS_TOKEN: ${{ fromJSON(steps.secrets.outputs.vault).ARTIFACTORY_ACCESS_TOKEN }}
          BUILD_NUMBER: ${{ needs.build.outputs.build-number }}
          # Ruling tests only that the results of analysis have not changed,
          # so one sonar.runtimeVersion is enough.
          # Plugin tests check API compatibility, so they should run against all supported versions.
        run: |
          ./gradlew ":its:ruling:test" "-Pruling" \
            "-Dsonar.runtimeVersion=LATEST_RELEASE" \
            "-Dorchestrator.artifactory.accessToken=${ARTIFACTORY_ACCESS_TOKEN}" \
            "-DbuildNumber=${BUILD_NUMBER}" \
            -Pqa --info --stacktrace --console plain --no-daemon --build-cache

  promote:
    needs:
      - build
      - qa_plugin
      - qa_ruling
    runs-on: github-ubuntu-latest-s  # Public repository runner
    name: Promote
    permissions:
      id-token: write  # Required for Vault OIDC authentication
      contents: write  # Required for repository access and tagging
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: jdx/mise-action@5ac50f778e26fac95da98d50503682459e86d566 # v3.2.0
        with:
          cache_save: false
          version: 2025.7.12
      - uses: SonarSource/ci-github-actions/promote@v1
        with:
          promote-pull-request: true  # Enable PR artifact promotion